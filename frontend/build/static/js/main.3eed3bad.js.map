{"version":3,"file":"static/js/main.3eed3bad.js","mappings":"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","sources":["../webpack/runtime/chunk loaded","../webpack/runtime/create fake namespace object","context/AuthContext.js","utils/axios.js","components/LanguageSelector.js","components/Login.js","hooks/useTaskTranslation.js","components/TaskModal.js","components/TaskForm.js","components/UserModal.js","components/PageHeader.js","services/api.js","store/slices/tasksSlice.js","components/MonthView.js","utils/taskUtils.js","components/Profile.js","utils/api.js","context/ThemeContext.js","components/Navbar.js","components/PendingTaskModal.js","components/PendingTasksManagement.js","components/UserManagement.js","App.js","i18n.js","store/index.js","index.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/jsonp chunk loading","../webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport i18next from \"i18next\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Funktion för att sätta språk baserat på användarens preferens\r\n  const setUserLanguage = (userData) => {\r\n    if (userData?.preferredLanguage) {\r\n      i18next.changeLanguage(userData.preferredLanguage);\r\n      localStorage.setItem(\"language\", userData.preferredLanguage);\r\n      document.documentElement.lang = userData.preferredLanguage;\r\n    } else {\r\n      // Om ingen preferredLanguage finns, använd engelska som standard\r\n      i18next.changeLanguage(\"en\");\r\n      localStorage.setItem(\"language\", \"en\");\r\n      document.documentElement.lang = \"en\";\r\n    }\r\n  };\r\n\r\n  // Kontrollera token vid sidladdning\r\n  useEffect(() => {\r\n    const checkAuth = () => {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n          const decoded = jwtDecode(token);\r\n          // Kontrollera om token har gått ut\r\n          if (decoded.exp * 1000 > Date.now()) {\r\n            setUser(decoded);\r\n            setUserLanguage(decoded);\r\n          } else {\r\n            localStorage.removeItem(\"token\");\r\n            setUser(null);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error checking auth:\", error);\r\n        localStorage.removeItem(\"token\");\r\n        setUser(null);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const login = (token) => {\r\n    try {\r\n      localStorage.setItem(\"token\", token);\r\n      const decoded = jwtDecode(token);\r\n      setUser(decoded);\r\n      setUserLanguage(decoded);\r\n    } catch (error) {\r\n      console.error(\"Error setting token:\", error);\r\n      localStorage.removeItem(\"token\");\r\n      setUser(null);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"language\");\r\n    setUser(null);\r\n  };\r\n\r\n  const updateUser = (userData) => {\r\n    if (user && userData) {\r\n      const updatedUser = { ...user, ...userData };\r\n      setUser(updatedUser);\r\n      setUserLanguage(updatedUser);\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout, updateUser }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || \"http://localhost:5000/api\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Add a request interceptor\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error(\"Request error:\", error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add a response interceptor\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem(\"token\");\r\n      window.location.href = \"/dftasks/login\";\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport ReactCountryFlag from \"react-country-flag\";\r\n\r\nconst countryFlags = {\r\n  en: \"GB\",\r\n  pl: \"PL\",\r\n  sv: \"SE\",\r\n  uk: \"UA\",\r\n};\r\n\r\nconst LanguageSelector = () => {\r\n  const { i18n, t } = useTranslation();\r\n\r\n  const handleLanguageChange = (lang) => {\r\n    i18n.changeLanguage(lang);\r\n    try {\r\n      localStorage.setItem(\"language\", JSON.stringify(lang));\r\n    } catch (error) {\r\n      console.error(\"Error saving language preference:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center space-x-1 sm:space-x-2\">\r\n      {Object.entries(countryFlags).map(([lang, country]) => (\r\n        <button\r\n          key={lang}\r\n          onClick={() => handleLanguageChange(lang)}\r\n          className={`transition-transform duration-150 ${\r\n            i18n.language === lang\r\n              ? \"transform scale-110 sm:scale-125\"\r\n              : \"hover:scale-110\"\r\n          }`}\r\n          aria-label={t(`${lang}`)}\r\n          title={t(`${lang}`)}\r\n        >\r\n          <ReactCountryFlag\r\n            countryCode={country}\r\n            svg\r\n            style={{\r\n              width: \"1.5em\",\r\n              height: \"1.5em\",\r\n              \"@media (minWidth: 640px)\": {\r\n                width: \"2em\",\r\n                height: \"2em\",\r\n              },\r\n            }}\r\n            title={t(`${lang}`)}\r\n          />\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LanguageSelector;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axiosInstance from \"../utils/axios\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport LanguageSelector from \"./LanguageSelector\";\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n  const { login, user } = useAuth();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      navigate(\"/dftasks/month-view\", { replace: true });\r\n    }\r\n  }, [user, navigate]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const response = await axiosInstance.post(\"/auth/login\", {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      if (response.data && response.data.token) {\r\n        login(response.data.token);\r\n        navigate(\"/dftasks/month-view\", { replace: true });\r\n      } else {\r\n        setError(t(\"loginError\"));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error);\r\n      setError(error.response?.data?.message || t(\"loginError\"));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  if (user) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-df-light dark:bg-dark px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"absolute top-4 right-4\">\r\n        <LanguageSelector />\r\n      </div>\r\n\r\n      <div className=\"w-full max-w-md space-y-6 -mt-20\">\r\n        <div className=\"flex flex-col items-center\">\r\n          <img\r\n            src=\"/dftasks/dark_logo.png\"\r\n            alt=\"DFTasks Logo\"\r\n            className=\"hidden dark:block w-auto h-40 sm:h-52 mb-2\"\r\n          />\r\n          <img\r\n            src=\"/dftasks/light_logo.png\"\r\n            alt=\"DFTasks Logo\"\r\n            className=\"dark:hidden w-auto h-40 sm:h-52 mb-2\"\r\n          />\r\n          <p className=\"text-center text-sm sm:text-base text-df-primary/70 dark:text-gray-400\">\r\n            {t(\"propertyManagement\")}\r\n          </p>\r\n        </div>\r\n\r\n        <form\r\n          className=\"mt-8 space-y-6 bg-white dark:bg-gray-800 shadow-lg rounded-lg p-6 sm:p-8\"\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label\r\n                htmlFor=\"email\"\r\n                className=\"block text-sm font-medium text-df-primary dark:text-white mb-1\"\r\n              >\r\n                {t(\"email\")}\r\n              </label>\r\n              <input\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                autoComplete=\"email\"\r\n                required\r\n                className=\"appearance-none relative block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 placeholder-gray-500 dark:placeholder-gray-400 text-df-primary dark:text-white bg-white dark:bg-gray-700 rounded-md focus:outline-none focus:ring-df-primary focus:border-df-primary sm:text-sm\"\r\n                placeholder={t(\"enterEmail\")}\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                disabled={isLoading}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label\r\n                htmlFor=\"password\"\r\n                className=\"block text-sm font-medium text-df-primary dark:text-white mb-1\"\r\n              >\r\n                {t(\"password\")}\r\n              </label>\r\n              <input\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                required\r\n                className=\"appearance-none relative block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 placeholder-gray-500 dark:placeholder-gray-400 text-df-primary dark:text-white bg-white dark:bg-gray-700 rounded-md focus:outline-none focus:ring-df-primary focus:border-df-primary sm:text-sm\"\r\n                placeholder={t(\"enterPassword\")}\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                disabled={isLoading}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {error && (\r\n            <div className=\"rounded-md bg-red-50 dark:bg-red-900/50 p-4\">\r\n              <div className=\"flex\">\r\n                <div className=\"ml-3\">\r\n                  <h3 className=\"text-sm font-medium text-red-800 dark:text-red-200\">\r\n                    {error}\r\n                  </h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm sm:text-base font-medium rounded-md text-white bg-df-primary hover:bg-df-primary/90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-df-primary transition-colors duration-150 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? t(\"loggingIn\") : t(\"login\")}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import { useTranslation } from \"react-i18next\";\r\nimport { useMemo } from \"react\";\r\n\r\nexport const useTaskTranslation = () => {\r\n  const { t, i18n } = useTranslation();\r\n\r\n  const translateTask = useMemo(\r\n    () => async (task) => {\r\n      if (!task) return null;\r\n\r\n      let translatedTitle = task.title;\r\n      let translatedDesc = task.description;\r\n\r\n      if (task.translations && task.translations[i18n.language]) {\r\n        translatedTitle = task.translations[i18n.language].title || task.title;\r\n        translatedDesc =\r\n          task.translations[i18n.language].description || task.description;\r\n      }\r\n\r\n      const translatedComments = (task.comments || []).map((comment) => {\r\n        let commentContent = comment.content;\r\n        if (comment.translations && comment.translations[i18n.language]) {\r\n          commentContent = comment.translations[i18n.language];\r\n        }\r\n        return {\r\n          ...comment,\r\n          content: commentContent,\r\n          createdBy: comment.createdBy || { name: t(\"unassigned\") },\r\n        };\r\n      });\r\n\r\n      return {\r\n        ...task,\r\n        title: translatedTitle,\r\n        description: translatedDesc,\r\n        comments: translatedComments,\r\n        _translatedLang: i18n.language,\r\n      };\r\n    },\r\n    [i18n.language, t]\r\n  );\r\n\r\n  const translateTasks = useMemo(\r\n    () => async (tasks) => {\r\n      if (!Array.isArray(tasks)) return [];\r\n      return Promise.all(tasks.map(translateTask));\r\n    },\r\n    [translateTask]\r\n  );\r\n\r\n  const translateComments = useMemo(\r\n    () => async (comments) => {\r\n      if (!Array.isArray(comments)) return [];\r\n\r\n      return comments.map((comment) => ({\r\n        ...comment,\r\n        content: comment.translations?.[i18n.language] || comment.content,\r\n        createdBy: comment.createdBy || { name: t(\"unassigned\") },\r\n        _translated: true,\r\n        _translatedLang: comment.translations?.[i18n.language]\r\n          ? i18n.language\r\n          : \"en\",\r\n      }));\r\n    },\r\n    [i18n.language, t]\r\n  );\r\n\r\n  return {\r\n    translateTask,\r\n    translateTasks,\r\n    translateComments,\r\n    currentLanguage: i18n.language,\r\n  };\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { format } from \"date-fns\";\r\nimport { useTaskTranslation } from \"../hooks/useTaskTranslation\";\r\nimport axiosInstance from \"../utils/axios\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nfunction TaskModal({\r\n  task,\r\n  onClose,\r\n  onStatusUpdate,\r\n  onAddComment,\r\n  onArchive,\r\n  onToggleCommentStatus,\r\n  userRole,\r\n  userId,\r\n  getStatusClass,\r\n  renderStatus,\r\n  users,\r\n  onEdit,\r\n}) {\r\n  const [newComment, setNewComment] = useState(\"\");\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const { t } = useTranslation();\r\n  const { translateTask } = useTaskTranslation();\r\n  const [translatedTask, setTranslatedTask] = useState(task);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [editedTask, setEditedTask] = useState(null);\r\n\r\n  const isAdmin = userRole === \"ADMIN\" || userRole === \"SUPERADMIN\";\r\n\r\n  useEffect(() => {\r\n    const updateTranslation = async () => {\r\n      const translated = await translateTask(task);\r\n      setTranslatedTask(translated);\r\n    };\r\n    updateTranslation();\r\n  }, [task, translateTask]);\r\n\r\n  useEffect(() => {\r\n    if (task) {\r\n      setEditedTask({\r\n        ...task,\r\n        dueDate: task.dueDate\r\n          ? format(new Date(task.dueDate), \"yyyy-MM-dd\")\r\n          : \"\",\r\n      });\r\n    }\r\n  }, [task]);\r\n\r\n  const handleEdit = async () => {\r\n    if (editedTask) {\r\n      await onEdit(editedTask);\r\n      setEditMode(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setEditedTask((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleArchive = async () => {\r\n    try {\r\n      await onArchive(task);\r\n    } catch (error) {\r\n      console.error(\"Error archiving task:\", error);\r\n      toast.error(t(\"errorTogglingTaskStatus\"));\r\n    }\r\n  };\r\n\r\n  const handleAddComment = () => {\r\n    if (!newComment.trim()) return;\r\n\r\n    setIsSubmitting(true);\r\n    onAddComment(task._id, newComment)\r\n      .then(() => {\r\n        setNewComment(\"\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding comment:\", error);\r\n      })\r\n      .finally(() => {\r\n        setIsSubmitting(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg w-full max-w-2xl max-h-[90vh] overflow-y-auto\">\r\n        <div className=\"p-6\">\r\n          <div className=\"flex justify-between items-start mb-4\">\r\n            <h2 className=\"text-xl font-bold text-df-primary dark:text-white\">\r\n              {editMode ? t(\"editTask\") : translatedTask.title}\r\n            </h2>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\r\n            >\r\n              <FaTimes />\r\n            </button>\r\n          </div>\r\n\r\n          {editMode ? (\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                  {t(\"title\")}\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  value={editedTask?.title || \"\"}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full px-3 py-2 border rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                  {t(\"description\")}\r\n                </label>\r\n                <textarea\r\n                  name=\"description\"\r\n                  value={editedTask?.description || \"\"}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full px-3 py-2 border rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n                  rows=\"3\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                  {t(\"dueDate\")}\r\n                </label>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"dueDate\"\r\n                  value={editedTask?.dueDate || \"\"}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full px-3 py-2 border rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                  {t(\"assignedTo\")}\r\n                </label>\r\n                <select\r\n                  name=\"assignedTo\"\r\n                  value={editedTask?.assignedTo?._id || \"\"}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full px-3 py-2 border rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n                >\r\n                  <option value=\"\">{t(\"selectUser\")}</option>\r\n                  {users.map((user) => (\r\n                    <option key={user._id} value={user._id}>\r\n                      {user.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"flex justify-end space-x-2 mt-4\">\r\n                <button\r\n                  onClick={() => setEditMode(false)}\r\n                  className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200 dark:bg-gray-700 dark:text-gray-300 dark:hover:bg-gray-600\"\r\n                >\r\n                  {t(\"cancel\")}\r\n                </button>\r\n                <button\r\n                  onClick={handleEdit}\r\n                  className=\"px-4 py-2 text-sm font-medium text-white bg-df-primary rounded-md hover:bg-df-primary/90\"\r\n                >\r\n                  {t(\"save\")}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                  {t(\"title\")}\r\n                </h4>\r\n                <p className=\"text-gray-900 dark:text-white\">\r\n                  {translatedTask.title}\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                  {t(\"description\")}\r\n                </h4>\r\n                <p className=\"text-gray-900 dark:text-white whitespace-pre-wrap\">\r\n                  {translatedTask.description}\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                  {t(\"dueDate\")}\r\n                </h4>\r\n                <p className=\"text-gray-900 dark:text-white\">\r\n                  {translatedTask.dueDate\r\n                    ? format(new Date(translatedTask.dueDate), \"yyyy-MM-dd\")\r\n                    : t(\"noDate\")}\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                  {t(\"assignedTo\")}\r\n                </h4>\r\n                <p className=\"text-gray-900 dark:text-white\">\r\n                  {translatedTask.assignedTo?.name || t(\"unassigned\")}\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                  {t(\"status\")}\r\n                </h4>\r\n                <span\r\n                  className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusClass(\r\n                    translatedTask.status\r\n                  )}`}\r\n                >\r\n                  {renderStatus(translatedTask.status)}\r\n                </span>\r\n              </div>\r\n\r\n              {isAdmin && (\r\n                <div className=\"flex justify-between mt-4\">\r\n                  <button\r\n                    onClick={() => setEditMode(true)}\r\n                    className=\"px-4 py-2 text-sm font-medium text-white bg-df-primary rounded-md hover:bg-df-primary/90\"\r\n                  >\r\n                    {t(\"edit\")}\r\n                  </button>\r\n                  <button\r\n                    onClick={handleArchive}\r\n                    className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200 dark:bg-gray-700 dark:text-gray-300 dark:hover:bg-gray-600\"\r\n                  >\r\n                    {translatedTask.isActive ? t(\"archive\") : t(\"unarchive\")}\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"mt-6\">\r\n            <h3 className=\"text-lg font-medium text-df-primary dark:text-white mb-4\">\r\n              {t(\"comments\")}\r\n            </h3>\r\n            <div className=\"space-y-4\">\r\n              {translatedTask.comments && translatedTask.comments.length > 0 ? (\r\n                translatedTask.comments.map((comment) => (\r\n                  <div\r\n                    key={comment._id}\r\n                    className={`p-4 rounded-lg ${\r\n                      comment.isActive\r\n                        ? \"bg-gray-50 dark:bg-gray-700\"\r\n                        : \"bg-red-50 dark:bg-red-900/20\"\r\n                    }`}\r\n                  >\r\n                    <div className=\"flex justify-between items-start\">\r\n                      <div className=\"flex items-start space-x-2\">\r\n                        <span className=\"font-medium text-df-primary dark:text-white\">\r\n                          {comment.createdBy?.name || t(\"unassigned\")}\r\n                        </span>\r\n                        <span className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                          {format(\r\n                            new Date(comment.createdAt),\r\n                            \"yyyy-MM-dd HH:mm\"\r\n                          )}\r\n                        </span>\r\n                      </div>\r\n                      {isAdmin && (\r\n                        <button\r\n                          onClick={() =>\r\n                            onToggleCommentStatus(\r\n                              translatedTask._id,\r\n                              comment._id\r\n                            )\r\n                          }\r\n                          className=\"text-sm text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\r\n                        >\r\n                          {comment.isActive ? t(\"archive\") : t(\"unarchive\")}\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                    <p className=\"mt-2 text-gray-600 dark:text-gray-300 whitespace-pre-wrap\">\r\n                      {comment.content}\r\n                    </p>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <p className=\"text-gray-500 dark:text-gray-400\">\r\n                  {t(\"noComments\")}\r\n                </p>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"mt-4\">\r\n              <textarea\r\n                value={newComment}\r\n                onChange={(e) => setNewComment(e.target.value)}\r\n                placeholder={t(\"writeComment\")}\r\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-df-primary focus:border-df-primary dark:bg-gray-700 dark:text-white\"\r\n                rows={3}\r\n              />\r\n              <div className=\"mt-2 flex justify-end\">\r\n                <button\r\n                  onClick={handleAddComment}\r\n                  disabled={isSubmitting || !newComment.trim()}\r\n                  className=\"px-4 py-2 bg-df-primary text-white rounded-md hover:bg-df-primary/90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-df-primary disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  {isSubmitting ? t(\"sending\") : t(\"send\")}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { format } from \"date-fns\";\r\n\r\nconst TaskForm = ({ onSubmit, onCancel, initialData = {}, users = [] }) => {\r\n  const { t } = useTranslation();\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    status: \"pending\",\r\n    assignedTo: \"\",\r\n    dueDate: format(new Date(), \"yyyy-MM-dd\"),\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (initialData && Object.keys(initialData).length > 0) {\r\n      setFormData({\r\n        title: initialData.title || \"\",\r\n        description: initialData.description || \"\",\r\n        status: initialData.status || \"pending\",\r\n        assignedTo: initialData.assignedTo?._id || \"\",\r\n        dueDate: initialData.dueDate\r\n          ? format(new Date(initialData.dueDate), \"yyyy-MM-dd\")\r\n          : format(new Date(), \"yyyy-MM-dd\"),\r\n      });\r\n    }\r\n  }, [initialData]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (isSubmitting) return;\r\n\r\n    try {\r\n      setIsSubmitting(true);\r\n      setError(\"\");\r\n      await onSubmit(formData);\r\n    } catch (error) {\r\n      console.error(\"Error submitting form:\", error);\r\n      setError(t(\"errorSavingTask\"));\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n      {error && (\r\n        <div className=\"bg-red-100 dark:bg-red-900/50 border border-red-400 text-red-700 dark:text-red-200 px-4 py-3 rounded relative\">\r\n          <span className=\"block sm:inline\">{error}</span>\r\n        </div>\r\n      )}\r\n\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n          {t(\"title\")}\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          value={formData.title}\r\n          onChange={handleChange}\r\n          className=\"mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 shadow-sm focus:border-df-primary focus:ring-df-primary dark:bg-gray-700 dark:text-white\"\r\n          required\r\n          disabled={isSubmitting}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n          {t(\"description\")}\r\n        </label>\r\n        <textarea\r\n          name=\"description\"\r\n          value={formData.description}\r\n          onChange={handleChange}\r\n          rows={3}\r\n          className=\"mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 shadow-sm focus:border-df-primary focus:ring-df-primary dark:bg-gray-700 dark:text-white\"\r\n          required\r\n          disabled={isSubmitting}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n          {t(\"status\")}\r\n        </label>\r\n        <select\r\n          name=\"status\"\r\n          value={formData.status}\r\n          onChange={handleChange}\r\n          className=\"mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 shadow-sm focus:border-df-primary focus:ring-df-primary dark:bg-gray-700 dark:text-white\"\r\n          required\r\n          disabled={isSubmitting}\r\n        >\r\n          <option value=\"pending\">{t(\"pending\")}</option>\r\n          <option value=\"in progress\">{t(\"inProgress\")}</option>\r\n          <option value=\"completed\">{t(\"completed\")}</option>\r\n          <option value=\"cannot fix\">{t(\"cannotFix\")}</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n          {t(\"assignedTo\")}\r\n        </label>\r\n        <select\r\n          name=\"assignedTo\"\r\n          value={formData.assignedTo}\r\n          onChange={handleChange}\r\n          className=\"mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 shadow-sm focus:border-df-primary focus:ring-df-primary dark:bg-gray-700 dark:text-white\"\r\n          required\r\n          disabled={isSubmitting}\r\n        >\r\n          <option value=\"\">{t(\"selectUser\")}</option>\r\n          {users.map((user) => (\r\n            <option key={user._id} value={user._id}>\r\n              {user.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n          {t(\"dueDate\")}\r\n        </label>\r\n        <input\r\n          type=\"date\"\r\n          name=\"dueDate\"\r\n          value={formData.dueDate}\r\n          onChange={handleChange}\r\n          className=\"mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 shadow-sm focus:border-df-primary focus:ring-df-primary dark:bg-gray-700 dark:text-white\"\r\n          required\r\n          disabled={isSubmitting}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"flex space-x-4\">\r\n        <button\r\n          type=\"submit\"\r\n          className=\"flex-1 py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-df-primary hover:bg-df-primary/90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-df-primary disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          disabled={isSubmitting}\r\n        >\r\n          {isSubmitting ? t(\"saving\") : t(\"submit\")}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={onCancel}\r\n          className=\"flex-1 py-2 px-4 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-df-primary\"\r\n        >\r\n          {t(\"cancel\")}\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","import React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport axiosInstance from \"../utils/axios\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\n\r\nfunction UserModal({ user, onClose, onEdit, isCreating }) {\r\n  const [name, setName] = useState(user?.name || \"\");\r\n  const [email, setEmail] = useState(user?.email || \"\");\r\n  const [currentPassword, setCurrentPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [preferredLanguage, setPreferredLanguage] = useState(\r\n    user?.preferredLanguage || \"en\"\r\n  );\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const { t, i18n } = useTranslation();\r\n  const { user: currentUser, updateUser } = useAuth();\r\n\r\n  const handleLanguageChange = (e) => {\r\n    const newLang = e.target.value;\r\n    setPreferredLanguage(newLang);\r\n  };\r\n\r\n  const handleProfileUpdate = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n\r\n    try {\r\n      const updateData = {\r\n        name,\r\n        email,\r\n        preferredLanguage,\r\n      };\r\n\r\n      let response;\r\n      // Om det är den inloggade användaren som uppdaterar sin egen profil\r\n      if (user?._id === currentUser?.id) {\r\n        response = await axiosInstance.patch(\"/profile\", updateData);\r\n        if (response.data?.user) {\r\n          i18n.changeLanguage(preferredLanguage);\r\n          localStorage.setItem(\"language\", preferredLanguage);\r\n          updateUser(response.data.user);\r\n        }\r\n      } else {\r\n        // Om det är en admin/superadmin som uppdaterar en annan användare\r\n        await onEdit(updateData);\r\n      }\r\n\r\n      setSuccess(t(\"profileUpdated\"));\r\n      if (typeof onClose === \"function\") {\r\n        setTimeout(() => onClose(), 1500);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Update error:\", error);\r\n      if (error.response?.status === 400) {\r\n        setError(error.response.data.message || t(\"invalidData\"));\r\n      } else if (error.response?.status === 401) {\r\n        setError(t(\"unauthorized\"));\r\n      } else if (error.response?.status === 409) {\r\n        setError(t(\"emailAlreadyExists\"));\r\n      } else {\r\n        setError(t(\"error\"));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePasswordUpdate = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n\r\n    if (newPassword !== confirmPassword) {\r\n      setError(t(\"passwordsDoNotMatch\"));\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await axiosInstance.patch(\"/users/password\", {\r\n        currentPassword,\r\n        newPassword,\r\n      });\r\n      setSuccess(t(\"passwordUpdated\"));\r\n      setCurrentPassword(\"\");\r\n      setNewPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n    } catch (error) {\r\n      setError(error.response?.data?.message || t(\"error\"));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-[55] overflow-y-auto\">\r\n      <div className=\"fixed inset-0 bg-black/30\" onClick={onClose}></div>\r\n      <div className=\"relative min-h-screen flex items-center justify-center p-4\">\r\n        <div className=\"relative bg-white dark:bg-gray-800 rounded-lg w-full max-w-md\">\r\n          <div className=\"p-6\">\r\n            <div className=\"flex justify-between items-center mb-6\">\r\n              <h2 className=\"text-xl font-semibold text-df-primary dark:text-white\">\r\n                {t(\"userSettings\")}\r\n              </h2>\r\n              <button\r\n                onClick={onClose}\r\n                className=\"text-gray-400 hover:text-gray-500 dark:hover:text-gray-300\"\r\n              >\r\n                <span className=\"sr-only\">{t(\"close\")}</span>\r\n                <svg\r\n                  className=\"h-6 w-6\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  stroke=\"currentColor\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M6 18L18 6M6 6l12 12\"\r\n                  />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n\r\n            {error && (\r\n              <div className=\"mb-4 p-2 bg-red-100 text-red-700 rounded\">\r\n                {error}\r\n              </div>\r\n            )}\r\n            {success && (\r\n              <div className=\"mb-4 p-2 bg-green-100 text-green-700 rounded\">\r\n                {success}\r\n              </div>\r\n            )}\r\n\r\n            <form onSubmit={handleProfileUpdate} className=\"mb-6\">\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"name\"\r\n                    className=\"block text-sm font-medium text-df-primary dark:text-white\"\r\n                  >\r\n                    {t(\"name\")}\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"name\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-df-primary focus:ring-df-primary dark:bg-gray-700 dark:border-gray-600 dark:text-white sm:text-sm\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"email\"\r\n                    className=\"block text-sm font-medium text-df-primary dark:text-white\"\r\n                  >\r\n                    {t(\"email\")}\r\n                  </label>\r\n                  <input\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-df-primary focus:ring-df-primary dark:bg-gray-700 dark:border-gray-600 dark:text-white sm:text-sm\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"preferredLanguage\"\r\n                    className=\"block text-sm font-medium text-df-primary dark:text-white\"\r\n                  >\r\n                    {t(\"preferredLanguage\")}\r\n                  </label>\r\n                  <select\r\n                    id=\"preferredLanguage\"\r\n                    value={preferredLanguage}\r\n                    onChange={handleLanguageChange}\r\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-df-primary focus:ring-df-primary dark:bg-gray-700 dark:border-gray-600 dark:text-white sm:text-sm\"\r\n                  >\r\n                    <option value=\"sv\">Svenska</option>\r\n                    <option value=\"pl\">Polski</option>\r\n                    <option value=\"uk\">Українська</option>\r\n                    <option value=\"en\">English</option>\r\n                  </select>\r\n                </div>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-df-primary hover:bg-df-primary/90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-df-primary\"\r\n                >\r\n                  {t(\"updateProfile\")}\r\n                </button>\r\n              </div>\r\n            </form>\r\n\r\n            <form onSubmit={handlePasswordUpdate}>\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"currentPassword\"\r\n                    className=\"block text-sm font-medium text-df-primary dark:text-white\"\r\n                  >\r\n                    {t(\"currentPassword\")}\r\n                  </label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"currentPassword\"\r\n                    value={currentPassword}\r\n                    onChange={(e) => setCurrentPassword(e.target.value)}\r\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-df-primary focus:ring-df-primary dark:bg-gray-700 dark:border-gray-600 dark:text-white sm:text-sm\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"newPassword\"\r\n                    className=\"block text-sm font-medium text-df-primary dark:text-white\"\r\n                  >\r\n                    {t(\"newPassword\")}\r\n                  </label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"newPassword\"\r\n                    value={newPassword}\r\n                    onChange={(e) => setNewPassword(e.target.value)}\r\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-df-primary focus:ring-df-primary dark:bg-gray-700 dark:border-gray-600 dark:text-white sm:text-sm\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"confirmPassword\"\r\n                    className=\"block text-sm font-medium text-df-primary dark:text-white\"\r\n                  >\r\n                    {t(\"confirmPassword\")}\r\n                  </label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"confirmPassword\"\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-df-primary focus:ring-df-primary dark:bg-gray-700 dark:border-gray-600 dark:text-white sm:text-sm\"\r\n                  />\r\n                </div>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-df-primary hover:bg-df-primary/90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-df-primary\"\r\n                >\r\n                  {t(\"updatePassword\")}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserModal;\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst PageHeader = ({ title }) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div className=\"mb-6\">\r\n      <h2 className=\"text-xl font-semibold text-df-primary dark:text-white\">\r\n        {title}\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import axiosInstance from \"../utils/axios\";\n\n// Auth API\nexport const authAPI = {\n  login: (credentials) => axiosInstance.post(\"/auth/login\", credentials),\n  forgotPassword: (email) =>\n    axiosInstance.post(\"/auth/forgot-password\", { email }),\n  resetPassword: (token, password) =>\n    axiosInstance.post(\"/auth/reset-password\", { token, password }),\n};\n\n// Tasks API\nexport const tasksAPI = {\n  getTasks: () => axiosInstance.get(\"/tasks\"),\n  getAllTasks: () => axiosInstance.get(\"/tasks/all\"),\n  getTask: (id) => axiosInstance.get(`/tasks/${id}`),\n  createTask: (taskData) => axiosInstance.post(\"/tasks\", taskData),\n  updateTaskStatus: (taskId, status) =>\n    axiosInstance.patch(`/tasks/${taskId}/status`, { status }),\n  toggleTaskStatus: async (taskId) =>\n    axiosInstance.patch(`/tasks/${taskId}/toggle`),\n  addComment: (taskId, content) =>\n    axiosInstance.post(`/tasks/${taskId}/comments`, { content }),\n  toggleCommentStatus: (taskId, commentId) =>\n    axiosInstance.patch(`/tasks/${taskId}/comments/${commentId}/toggle`),\n};\n\n// Pending Tasks API\nexport const pendingTasksAPI = {\n  getPendingTasks: (showArchived = false) =>\n    axiosInstance.get(`/tasks/pending?showArchived=${showArchived}`),\n  approvePendingTask: (taskId, data) =>\n    axiosInstance.post(`/tasks/pending/${taskId}/approve`, data),\n  declinePendingTask: (taskId, reason) =>\n    axiosInstance.post(`/tasks/pending/${taskId}/decline`, { reason }),\n};\n\n// Users API\nexport const usersAPI = {\n  getUsers: () => axiosInstance.get(\"/users\"),\n  getAllUsers: () => axiosInstance.get(\"/users/all\"),\n  createUser: (userData) => axiosInstance.post(\"/users\", userData),\n  updateUser: (userId, userData) =>\n    axiosInstance.patch(`/users/${userId}`, userData),\n  toggleUserStatus: (userId) => axiosInstance.patch(`/users/${userId}/toggle`),\n};\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { tasksAPI } from \"../../services/api\";\r\nimport { toast } from \"react-hot-toast\";\r\n\r\n// Async thunks\r\nexport const fetchTasks = createAsyncThunk(\r\n  \"tasks/fetchTasks\",\r\n  async ({ showInactive = false }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await tasksAPI.getTasks(showInactive);\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(\r\n        error.response?.data || \"Kunde inte hämta uppgifter\"\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nexport const createTask = createAsyncThunk(\r\n  \"tasks/createTask\",\r\n  async (taskData, { rejectWithValue }) => {\r\n    try {\r\n      const response = await tasksAPI.createTask(taskData);\r\n      toast.success(\"Uppgift skapad\");\r\n      return response.data;\r\n    } catch (error) {\r\n      toast.error(\"Kunde inte skapa uppgift\");\r\n      return rejectWithValue(error.response?.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const updateTaskStatus = createAsyncThunk(\r\n  \"tasks/updateStatus\",\r\n  async ({ taskId, status }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await tasksAPI.updateTaskStatus(taskId, status);\r\n      return response.data;\r\n    } catch (error) {\r\n      toast.error(\"Kunde inte uppdatera status\");\r\n      return rejectWithValue(error.response?.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const toggleTaskStatus = createAsyncThunk(\r\n  \"tasks/toggleStatus\",\r\n  async (taskId, { rejectWithValue }) => {\r\n    try {\r\n      const response = await tasksAPI.toggleTaskStatus(taskId);\r\n      return response.data;\r\n    } catch (error) {\r\n      toast.error(\"Kunde inte ändra uppgiftsstatus\");\r\n      return rejectWithValue(error.response?.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const addComment = createAsyncThunk(\r\n  \"tasks/addComment\",\r\n  async ({ taskId, content }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await tasksAPI.addComment(taskId, content);\r\n      return response.data;\r\n    } catch (error) {\r\n      toast.error(\"Kunde inte lägga till kommentar\");\r\n      return rejectWithValue(error.response?.data);\r\n    }\r\n  }\r\n);\r\n\r\nconst tasksSlice = createSlice({\r\n  name: \"tasks\",\r\n  initialState: {\r\n    items: [],\r\n    loading: false,\r\n    error: null,\r\n    selectedTask: null,\r\n  },\r\n  reducers: {\r\n    setSelectedTask: (state, action) => {\r\n      state.selectedTask = action.payload;\r\n    },\r\n    optimisticUpdateTask: (state, action) => {\r\n      const updatedTask = action.payload;\r\n      const index = state.items.findIndex(\r\n        (task) => task._id === updatedTask._id\r\n      );\r\n      if (index !== -1) {\r\n        state.items[index] = { ...state.items[index], ...updatedTask };\r\n      }\r\n    },\r\n    optimisticAddComment: (state, action) => {\r\n      const { taskId, comment } = action.payload;\r\n      const task = state.items.find((task) => task._id === taskId);\r\n      if (task) {\r\n        if (!task.comments) task.comments = [];\r\n        task.comments.unshift(comment);\r\n      }\r\n      if (state.selectedTask?._id === taskId) {\r\n        if (!state.selectedTask.comments) state.selectedTask.comments = [];\r\n        state.selectedTask.comments.unshift(comment);\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // fetchTasks\r\n      .addCase(fetchTasks.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchTasks.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.items = action.payload;\r\n      })\r\n      .addCase(fetchTasks.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      // createTask\r\n      .addCase(createTask.fulfilled, (state, action) => {\r\n        state.items.push(action.payload);\r\n      })\r\n      // updateTaskStatus\r\n      .addCase(updateTaskStatus.fulfilled, (state, action) => {\r\n        const updatedTask = action.payload;\r\n        const index = state.items.findIndex(\r\n          (task) => task._id === updatedTask._id\r\n        );\r\n        if (index !== -1) {\r\n          state.items[index] = updatedTask;\r\n        }\r\n        if (state.selectedTask?._id === updatedTask._id) {\r\n          state.selectedTask = updatedTask;\r\n        }\r\n      })\r\n      // toggleTaskStatus\r\n      .addCase(toggleTaskStatus.fulfilled, (state, action) => {\r\n        const updatedTask = action.payload;\r\n        const index = state.items.findIndex(\r\n          (task) => task._id === updatedTask._id\r\n        );\r\n        if (index !== -1) {\r\n          state.items[index] = updatedTask;\r\n        }\r\n        if (state.selectedTask?._id === updatedTask._id) {\r\n          state.selectedTask = updatedTask;\r\n        }\r\n      })\r\n      // addComment\r\n      .addCase(addComment.fulfilled, (state, action) => {\r\n        const updatedTask = action.payload;\r\n        const index = state.items.findIndex(\r\n          (task) => task._id === updatedTask._id\r\n        );\r\n        if (index !== -1) {\r\n          state.items[index] = updatedTask;\r\n        }\r\n        if (state.selectedTask?._id === updatedTask._id) {\r\n          state.selectedTask = updatedTask;\r\n        }\r\n      });\r\n  },\r\n});\r\n\r\nexport const { setSelectedTask, optimisticUpdateTask, optimisticAddComment } =\r\n  tasksSlice.actions;\r\n\r\nexport default tasksSlice.reducer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axiosInstance from \"../utils/axios\";\r\nimport { format } from \"date-fns\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport i18n from \"i18next\";\r\nimport { useTaskTranslation } from \"../hooks/useTaskTranslation\";\r\nimport TaskModal from \"./TaskModal\";\r\nimport TaskForm from \"./TaskForm\";\r\nimport UserModal from \"./UserModal\";\r\nimport { tasksAPI } from \"../services/api\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport PageHeader from \"./PageHeader\";\r\nimport { useTaskUtils } from \"../utils/taskUtils\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  fetchTasks,\r\n  createTask,\r\n  updateTaskStatus,\r\n  toggleTaskStatus,\r\n  addComment,\r\n  setSelectedTask,\r\n  optimisticUpdateTask,\r\n  optimisticAddComment,\r\n} from \"../store/slices/tasksSlice\";\r\n\r\nfunction MonthView() {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    items: tasks,\r\n    loading,\r\n    error,\r\n    selectedTask,\r\n  } = useSelector((state) => state.tasks);\r\n  const [users, setUsers] = useState([]);\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [showUserModal, setShowUserModal] = useState(false);\r\n  const [currentMonth] = useState(new Date());\r\n  const [showTaskForm, setShowTaskForm] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [showArchived, setShowArchived] = useState(false);\r\n  const { user } = useAuth();\r\n  const { t } = useTranslation();\r\n  const { getStatusClass, renderStatus } = useTaskUtils();\r\n  const { translateTask, translateTasks, currentLanguage } =\r\n    useTaskTranslation();\r\n\r\n  const weekDays = {\r\n    en: [\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n      \"Sunday\",\r\n    ],\r\n    sv: [\"Måndag\", \"Tisdag\", \"Onsdag\", \"Torsdag\", \"Fredag\", \"Lördag\", \"Söndag\"],\r\n    pl: [\r\n      \"Poniedziałek\",\r\n      \"Wtorek\",\r\n      \"Środa\",\r\n      \"Czwartek\",\r\n      \"Piątek\",\r\n      \"Sobota\",\r\n      \"Niedziela\",\r\n    ],\r\n    uk: [\r\n      \"Понеділок\",\r\n      \"Вівторок\",\r\n      \"Середа\",\r\n      \"Четвер\",\r\n      \"П'ятниця\",\r\n      \"Субота\",\r\n      \"Неділя\",\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      const decoded = jwtDecode(token);\r\n      setCurrentUser(decoded);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTasks({ showInactive: showArchived }));\r\n  }, [dispatch, showArchived]);\r\n\r\n  useEffect(() => {\r\n    const updateSelectedTaskComments = async () => {\r\n      if (selectedTask && selectedTask.comments?.length > 0) {\r\n        const translatedTask = await translateTask(selectedTask);\r\n        dispatch(setSelectedTask(translatedTask));\r\n      }\r\n    };\r\n\r\n    updateSelectedTaskComments();\r\n  }, [currentLanguage, selectedTask?._id]);\r\n\r\n  const handleTaskClick = async (task) => {\r\n    if (!task) return;\r\n    try {\r\n      const translatedTask = await translateTask(task);\r\n      dispatch(setSelectedTask(translatedTask));\r\n    } catch (error) {\r\n      dispatch(setSelectedTask(task));\r\n    }\r\n  };\r\n\r\n  const handleDayClick = (date) => {\r\n    if (!user || !user.role === \"ADMIN\") return;\r\n    setSelectedDate(date);\r\n    setShowTaskForm(true);\r\n  };\r\n\r\n  const handleCreateTask = async (taskData) => {\r\n    try {\r\n      await dispatch(\r\n        createTask({ ...taskData, dueDate: selectedDate })\r\n      ).unwrap();\r\n      setShowTaskForm(false);\r\n      setSelectedDate(null);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleCancelTaskForm = () => {\r\n    setShowTaskForm(false);\r\n    setSelectedDate(null);\r\n  };\r\n\r\n  const handleArchiveTask = async (taskData) => {\r\n    try {\r\n      dispatch(\r\n        optimisticUpdateTask({\r\n          ...taskData,\r\n          isActive: !taskData.isActive,\r\n        })\r\n      );\r\n\r\n      await dispatch(toggleTaskStatus(taskData._id)).unwrap();\r\n      dispatch(setSelectedTask(null));\r\n    } catch (error) {\r\n      dispatch(\r\n        optimisticUpdateTask({\r\n          ...taskData,\r\n          isActive: taskData.isActive,\r\n        })\r\n      );\r\n      toast.error(t(\"errorTogglingTaskStatus\"));\r\n    }\r\n  };\r\n\r\n  const handleStatusUpdate = async (task, newStatus) => {\r\n    try {\r\n      dispatch(\r\n        optimisticUpdateTask({\r\n          ...task,\r\n          status: newStatus,\r\n        })\r\n      );\r\n\r\n      await dispatch(\r\n        updateTaskStatus({ taskId: task._id, status: newStatus })\r\n      ).unwrap();\r\n    } catch (error) {\r\n      dispatch(\r\n        optimisticUpdateTask({\r\n          ...task,\r\n          status: task.status,\r\n        })\r\n      );\r\n      toast.error(t(\"errorUpdatingStatus\"));\r\n    }\r\n  };\r\n\r\n  const handleAddComment = async (taskId, commentText) => {\r\n    try {\r\n      const tempComment = {\r\n        _id: Date.now().toString(),\r\n        content: commentText,\r\n        createdBy: user,\r\n        createdAt: new Date().toISOString(),\r\n        isActive: true,\r\n      };\r\n\r\n      dispatch(\r\n        optimisticAddComment({\r\n          taskId,\r\n          comment: tempComment,\r\n        })\r\n      );\r\n\r\n      await dispatch(addComment({ taskId, content: commentText })).unwrap();\r\n    } catch (error) {\r\n      toast.error(t(\"errorAddingComment\"));\r\n    }\r\n  };\r\n\r\n  const handleEdit = async (taskData) => {\r\n    try {\r\n      await axiosInstance.patch(`/tasks/${taskData._id}`, taskData);\r\n      dispatch(fetchTasks({ showInactive: showArchived }));\r\n      toast.success(t(\"taskUpdated\"));\r\n    } catch (error) {\r\n      console.error(\"Error updating task:\", error);\r\n      toast.error(t(\"errorUpdatingTask\"));\r\n    }\r\n  };\r\n\r\n  const canEditTask = (task) => {\r\n    if (!user || !task) return false;\r\n    return (\r\n      user.role === \"ADMIN\" ||\r\n      user.role === \"SUPERADMIN\" ||\r\n      task.assignedTo?._id === user._id\r\n    );\r\n  };\r\n\r\n  const daysInMonth = new Date(\r\n    currentMonth.getFullYear(),\r\n    currentMonth.getMonth() + 1,\r\n    0\r\n  ).getDate();\r\n  const firstDayOfMonth = new Date(\r\n    currentMonth.getFullYear(),\r\n    currentMonth.getMonth(),\r\n    1\r\n  ).getDay();\r\n\r\n  const getMonthName = (date) => {\r\n    const monthIndex = date.getMonth();\r\n    const months = [\r\n      \"months.january\",\r\n      \"months.february\",\r\n      \"months.march\",\r\n      \"months.april\",\r\n      \"months.may\",\r\n      \"months.june\",\r\n      \"months.july\",\r\n      \"months.august\",\r\n      \"months.september\",\r\n      \"months.october\",\r\n      \"months.november\",\r\n      \"months.december\",\r\n    ];\r\n    return t(months[monthIndex]);\r\n  };\r\n\r\n  const isAdmin = user?.role === \"ADMIN\" || user?.role === \"SUPERADMIN\";\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-64\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-df-primary\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-df-light dark:bg-dark pt-20 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        <div className=\"p-6\">\r\n          <div className=\"flex justify-between items-center mb-6\">\r\n            <PageHeader title={t(\"tasks\")} />\r\n            <div className=\"flex items-center space-x-4\">\r\n              {isAdmin && (\r\n                <label className=\"flex items-center space-x-2 text-gray-700 dark:text-gray-300\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={showArchived}\r\n                    onChange={(e) => setShowArchived(e.target.checked)}\r\n                    className=\"form-checkbox h-4 w-4 text-df-primary rounded border-gray-300 focus:ring-df-primary dark:border-gray-600 dark:bg-gray-700\"\r\n                  />\r\n                  <span>{t(\"showInactive\")}</span>\r\n                </label>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg overflow-hidden\">\r\n            <div className=\"flex justify-between items-center p-4\">\r\n              <h2 className=\"text-xl font-semibold text-df-primary dark:text-white\">\r\n                {`${getMonthName(currentMonth)} ${currentMonth.getFullYear()}`}\r\n              </h2>\r\n            </div>\r\n            <div className=\"grid grid-cols-7 gap-px bg-gray-200 dark:bg-gray-700\">\r\n              {weekDays[i18n.language].map((day) => (\r\n                <div key={day} className=\"bg-white dark:bg-gray-800 p-2\">\r\n                  <h3 className=\"text-sm font-medium text-df-primary dark:text-white\">\r\n                    {day}\r\n                  </h3>\r\n                </div>\r\n              ))}\r\n              {Array.from({ length: firstDayOfMonth - 1 }).map((_, index) => (\r\n                <div\r\n                  key={`empty-${index}`}\r\n                  className=\"bg-white dark:bg-gray-800 p-4 min-h-[120px]\"\r\n                />\r\n              ))}\r\n              {Array.from({ length: daysInMonth }).map((_, index) => {\r\n                const date = new Date(\r\n                  currentMonth.getFullYear(),\r\n                  currentMonth.getMonth(),\r\n                  index + 1\r\n                );\r\n                const dayTasks = tasks.filter(\r\n                  (task) =>\r\n                    format(new Date(task.dueDate), \"yyyy-MM-dd\") ===\r\n                    format(date, \"yyyy-MM-dd\")\r\n                );\r\n\r\n                return (\r\n                  <div\r\n                    key={index}\r\n                    className={`bg-white dark:bg-gray-800 p-4 min-h-[120px] ${\r\n                      isAdmin\r\n                        ? \"cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700\"\r\n                        : \"\"\r\n                    }`}\r\n                    onClick={(e) => {\r\n                      if (e.target === e.currentTarget && isAdmin) {\r\n                        handleDayClick(date);\r\n                      }\r\n                    }}\r\n                  >\r\n                    <p className=\"text-sm text-df-primary/70 dark:text-gray-400\">\r\n                      {index + 1}\r\n                    </p>\r\n                    <div className=\"space-y-2\">\r\n                      {dayTasks.map((task) => (\r\n                        <div\r\n                          key={task._id}\r\n                          className={`p-2 rounded-lg ${\r\n                            canEditTask(task)\r\n                              ? \"bg-df-primary/10 dark:bg-gray-700 hover:bg-df-primary/20 dark:hover:bg-gray-600\"\r\n                              : \"bg-gray-50 dark:bg-gray-800 hover:bg-gray-100 dark:hover:bg-gray-700\"\r\n                          } cursor-pointer transition-colors duration-150 ${\r\n                            !task.isActive ? \"opacity-50\" : \"\"\r\n                          }`}\r\n                          onClick={() => handleTaskClick(task)}\r\n                        >\r\n                          <div className=\"text-sm font-medium text-df-primary dark:text-white truncate\">\r\n                            {task.title}\r\n                          </div>\r\n                          <div className=\"mt-1 flex items-center justify-between\">\r\n                            <span\r\n                              className={`px-2 text-xs font-semibold rounded-full ${getStatusClass(\r\n                                task.status\r\n                              )}`}\r\n                            >\r\n                              {renderStatus(task.status)}\r\n                            </span>\r\n                            <span className=\"text-xs text-df-primary/70 dark:text-gray-400\">\r\n                              {task.assignedTo?.name || t(\"unassigned\")}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {selectedTask && (\r\n        <TaskModal\r\n          task={selectedTask}\r\n          onClose={() => dispatch(setSelectedTask(null))}\r\n          onStatusUpdate={handleStatusUpdate}\r\n          onAddComment={handleAddComment}\r\n          onArchive={handleArchiveTask}\r\n          onEdit={handleEdit}\r\n          userRole={user?.role}\r\n          userId={user?._id}\r\n          getStatusClass={getStatusClass}\r\n          renderStatus={renderStatus}\r\n          users={users}\r\n        />\r\n      )}\r\n\r\n      {showTaskForm && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-xl w-full max-w-md\">\r\n            <h2 className=\"text-xl font-bold text-df-primary dark:text-white mb-4\">\r\n              {t(\"newTask\")}\r\n            </h2>\r\n            <TaskForm\r\n              onSubmit={handleCreateTask}\r\n              onCancel={handleCancelTaskForm}\r\n              users={users}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {showUserModal && (\r\n        <UserModal user={user} onClose={() => setShowUserModal(false)} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MonthView;\r\n","import { useTranslation } from \"react-i18next\";\r\n\r\nexport const useTaskUtils = () => {\r\n  const { t } = useTranslation();\r\n\r\n  const getStatusClass = (status) => {\r\n    switch (status) {\r\n      case \"pending\":\r\n        return \"bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300\";\r\n      case \"in progress\":\r\n        return \"bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300\";\r\n      case \"completed\":\r\n        return \"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300\";\r\n      case \"cannot fix\":\r\n        return \"bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300\";\r\n      default:\r\n        return \"bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-300\";\r\n    }\r\n  };\r\n\r\n  const renderStatus = (status) => {\r\n    switch (status) {\r\n      case \"pending\":\r\n        return t(\"pending\");\r\n      case \"in progress\":\r\n        return t(\"inProgress\");\r\n      case \"completed\":\r\n        return t(\"completed\");\r\n      case \"cannot fix\":\r\n        return t(\"cannotFix\");\r\n      default:\r\n        return status;\r\n    }\r\n  };\r\n\r\n  return {\r\n    getStatusClass,\r\n    renderStatus,\r\n  };\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport { updateProfile, changePassword } from \"../utils/api\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst Profile = () => {\r\n  const { user, updateUser } = useAuth();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [preferredLanguage, setPreferredLanguage] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [passwordMessage, setPasswordMessage] = useState(\"\");\r\n  const [currentPassword, setCurrentPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setName(user.name || \"\");\r\n      setEmail(user.email || \"\");\r\n      setPreferredLanguage(user.preferredLanguage || \"en\");\r\n    }\r\n  }, [user]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await updateProfile({\r\n        name,\r\n        email,\r\n        preferredLanguage,\r\n      });\r\n\r\n      if (response.status) {\r\n        updateUser(response.user);\r\n        setMessage(t(\"profileUpdated\"));\r\n      }\r\n    } catch (error) {\r\n      setMessage(t(\"errorUpdatingProfile\"));\r\n    }\r\n  };\r\n\r\n  const handlePasswordChange = async (e) => {\r\n    e.preventDefault();\r\n    if (newPassword !== confirmPassword) {\r\n      setPasswordMessage(t(\"passwordsDoNotMatch\"));\r\n      return;\r\n    }\r\n    try {\r\n      const response = await changePassword({\r\n        currentPassword,\r\n        newPassword,\r\n      });\r\n\r\n      if (response.status) {\r\n        setPasswordMessage(t(\"passwordUpdated\"));\r\n        setCurrentPassword(\"\");\r\n        setNewPassword(\"\");\r\n        setConfirmPassword(\"\");\r\n      }\r\n    } catch (error) {\r\n      setPasswordMessage(t(\"errorUpdatingPassword\"));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-df-light dark:bg-dark pt-20 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6\">\r\n          <h2 className=\"text-xl font-semibold text-df-primary dark:text-white mb-6\">\r\n            {t(\"profile\")}\r\n          </h2>\r\n          {message && (\r\n            <div className=\"mb-6 p-3 rounded-lg bg-df-primary/10 dark:bg-df-primary/20 text-df-primary dark:text-white\">\r\n              {message}\r\n            </div>\r\n          )}\r\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-df-primary dark:text-white mb-1\">\r\n                {t(\"name\")}\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                className=\"w-full px-3 py-2 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-df-primary dark:text-white focus:ring-df-primary focus:border-df-primary\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-df-primary dark:text-white mb-1\">\r\n                {t(\"email\")}\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                className=\"w-full px-3 py-2 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-df-primary dark:text-white focus:ring-df-primary focus:border-df-primary\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-df-primary dark:text-white mb-1\">\r\n                {t(\"preferredLanguage\")}\r\n              </label>\r\n              <select\r\n                value={preferredLanguage}\r\n                onChange={(e) => setPreferredLanguage(e.target.value)}\r\n                className=\"w-full px-3 py-2 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-df-primary dark:text-white focus:ring-df-primary focus:border-df-primary\"\r\n              >\r\n                <option value=\"sv\">{t(\"swedish\")}</option>\r\n                <option value=\"pl\">{t(\"polish\")}</option>\r\n                <option value=\"uk\">{t(\"ukrainian\")}</option>\r\n                <option value=\"en\">{t(\"english\")}</option>\r\n              </select>\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"w-full py-2 px-4 rounded-md bg-df-primary hover:bg-df-primary/90 text-white font-medium transition-colors duration-150\"\r\n            >\r\n              {t(\"updateProfile\")}\r\n            </button>\r\n          </form>\r\n\r\n          <div className=\"mt-8 pt-8 border-t border-gray-200 dark:border-gray-700\">\r\n            <h3 className=\"text-lg font-semibold text-df-primary dark:text-white mb-6\">\r\n              {t(\"changePassword\")}\r\n            </h3>\r\n            {passwordMessage && (\r\n              <div className=\"mb-6 p-3 rounded-lg bg-df-primary/10 dark:bg-df-primary/20 text-df-primary dark:text-white\">\r\n                {passwordMessage}\r\n              </div>\r\n            )}\r\n            <form onSubmit={handlePasswordChange} className=\"space-y-6\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-df-primary dark:text-white mb-1\">\r\n                  {t(\"currentPassword\")}\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  value={currentPassword}\r\n                  onChange={(e) => setCurrentPassword(e.target.value)}\r\n                  className=\"w-full px-3 py-2 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-df-primary dark:text-white focus:ring-df-primary focus:border-df-primary\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-df-primary dark:text-white mb-1\">\r\n                  {t(\"newPassword\")}\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  value={newPassword}\r\n                  onChange={(e) => setNewPassword(e.target.value)}\r\n                  className=\"w-full px-3 py-2 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-df-primary dark:text-white focus:ring-df-primary focus:border-df-primary\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-df-primary dark:text-white mb-1\">\r\n                  {t(\"confirmNewPassword\")}\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  className=\"w-full px-3 py-2 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-df-primary dark:text-white focus:ring-df-primary focus:border-df-primary\"\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"w-full py-2 px-4 rounded-md bg-df-primary hover:bg-df-primary/90 text-white font-medium transition-colors duration-150\"\r\n              >\r\n                {t(\"updatePassword\")}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import axiosInstance from \"./axios\";\n\nexport const updateProfile = async (userData) => {\n  try {\n    const response = await axiosInstance.patch(\"/profile\", userData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const changePassword = async (passwordData) => {\n  try {\n    const response = await axiosInstance.patch(\n      \"/profile/change-password\",\n      passwordData\n    );\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n","import React, { createContext, useContext, useState, useEffect } from \"react\";\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport function ThemeProvider({ children }) {\r\n  const [darkMode, setDarkMode] = useState(() => {\r\n    const savedTheme = localStorage.getItem(\"theme\");\r\n    return (\r\n      savedTheme === \"dark\" ||\r\n      (!savedTheme && window.matchMedia(\"(prefers-color-scheme: dark)\").matches)\r\n    );\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (darkMode) {\r\n      document.documentElement.classList.add(\"dark\");\r\n      localStorage.setItem(\"theme\", \"dark\");\r\n    } else {\r\n      document.documentElement.classList.remove(\"dark\");\r\n      localStorage.setItem(\"theme\", \"light\");\r\n    }\r\n  }, [darkMode]);\r\n\r\n  const toggleTheme = () => {\r\n    setDarkMode(!darkMode);\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ darkMode, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useTheme() {\r\n  return useContext(ThemeContext);\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useTheme } from \"../context/ThemeContext\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport {\r\n  FaSun,\r\n  FaMoon,\r\n  FaTasks,\r\n  FaClipboardList,\r\n  FaUsers,\r\n  FaSignOutAlt,\r\n  FaUser,\r\n} from \"react-icons/fa\";\r\nimport LanguageSelector from \"./LanguageSelector\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport axiosInstance from \"../utils/axios\";\r\n\r\nconst Navbar = () => {\r\n  const { user, logout } = useAuth();\r\n  const { darkMode, toggleTheme } = useTheme();\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n  const [pendingTasksCount, setPendingTasksCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchPendingTasksCount = async () => {\r\n      if (user?.role === \"ADMIN\" || user?.role === \"SUPERADMIN\") {\r\n        try {\r\n          const response = await axiosInstance.get(\"/tasks/pending\");\r\n          setPendingTasksCount(response.data.pendingTasks?.length || 0);\r\n        } catch (error) {\r\n          console.error(\"Error fetching pending tasks count:\", error);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchPendingTasksCount();\r\n    // Uppdatera var 30:e sekund\r\n    const interval = setInterval(fetchPendingTasksCount, 30000);\r\n    return () => clearInterval(interval);\r\n  }, [user]);\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    navigate(\"/dftasks/login\");\r\n  };\r\n\r\n  const isAdmin = user?.role === \"ADMIN\" || user?.role === \"SUPERADMIN\";\r\n\r\n  return (\r\n    <nav className=\"fixed top-0 left-0 right-0 bg-white dark:bg-gray-800 shadow-lg dark:shadow-[0_4px_12px_0_rgba(0,0,0,0.5)] z-[60]\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"flex justify-between h-16\">\r\n          <div className=\"flex items-center space-x-4\">\r\n            <Link\r\n              to={user ? \"/dftasks/month-view\" : \"/dftasks\"}\r\n              className=\"text-xl font-bold text-df-primary dark:text-white\"\r\n            >\r\n              DFTasks\r\n            </Link>\r\n\r\n            <div className=\"scale-75 sm:scale-100\">\r\n              <LanguageSelector />\r\n            </div>\r\n\r\n            {user && isAdmin && (\r\n              <div className=\"flex space-x-2 sm:space-x-6\">\r\n                <Link\r\n                  to=\"/dftasks/month-view\"\r\n                  className=\"group relative p-2 text-df-primary dark:text-white hover:text-df-primary/80 dark:hover:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\r\n                  title={t(\"tasks\")}\r\n                >\r\n                  <FaTasks className=\"text-xl\" />\r\n                  <span className=\"absolute -bottom-8 left-1/2 transform -translate-x-1/2 px-2 py-1 bg-gray-800 dark:bg-gray-700 text-white text-sm rounded opacity-0 group-hover:opacity-100 transition-opacity whitespace-nowrap\">\r\n                    {t(\"tasks\")}\r\n                  </span>\r\n                </Link>\r\n                <Link\r\n                  to=\"/dftasks/pending-tasks\"\r\n                  className=\"group relative p-2 text-df-primary dark:text-white hover:text-df-primary/80 dark:hover:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\r\n                  title={t(\"pending.tasks\")}\r\n                >\r\n                  <div className=\"relative\">\r\n                    <FaClipboardList className=\"text-xl\" />\r\n                    {pendingTasksCount > 0 && (\r\n                      <span className=\"absolute -top-2 -right-2 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center\">\r\n                        {pendingTasksCount}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                  <span className=\"absolute -bottom-8 left-1/2 transform -translate-x-1/2 px-2 py-1 bg-gray-800 dark:bg-gray-700 text-white text-sm rounded opacity-0 group-hover:opacity-100 transition-opacity whitespace-nowrap\">\r\n                    {t(\"pending.tasks\")}\r\n                  </span>\r\n                </Link>\r\n                <Link\r\n                  to=\"/dftasks/users\"\r\n                  className=\"group relative p-2 text-df-primary dark:text-white hover:text-df-primary/80 dark:hover:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\r\n                  title={t(\"users\")}\r\n                >\r\n                  <FaUsers className=\"text-xl\" />\r\n                  <span className=\"absolute -bottom-8 left-1/2 transform -translate-x-1/2 px-2 py-1 bg-gray-800 dark:bg-gray-700 text-white text-sm rounded opacity-0 group-hover:opacity-100 transition-opacity whitespace-nowrap\">\r\n                    {t(\"users\")}\r\n                  </span>\r\n                </Link>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"flex items-center space-x-4\">\r\n            <button\r\n              onClick={toggleTheme}\r\n              className=\"group relative p-2 rounded-lg text-df-primary dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\"\r\n              title={darkMode ? t(\"light.mode\") : t(\"dark.mode\")}\r\n            >\r\n              {darkMode ? (\r\n                <FaSun className=\"text-xl\" />\r\n              ) : (\r\n                <FaMoon className=\"text-xl\" />\r\n              )}\r\n              <span className=\"absolute -bottom-8 left-1/2 transform -translate-x-1/2 px-2 py-1 bg-gray-800 dark:bg-gray-700 text-white text-sm rounded opacity-0 group-hover:opacity-100 transition-opacity whitespace-nowrap\">\r\n                {darkMode ? t(\"light.mode\") : t(\"dark.mode\")}\r\n              </span>\r\n            </button>\r\n\r\n            {user && (\r\n              <>\r\n                <Link\r\n                  to=\"/dftasks/profile\"\r\n                  className=\"group relative p-2 text-df-primary dark:text-white hover:text-df-primary/80 dark:hover:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\r\n                  title={t(\"profile\")}\r\n                >\r\n                  <FaUser className=\"text-xl\" />\r\n                  <span className=\"absolute -bottom-8 left-1/2 transform -translate-x-1/2 px-2 py-1 bg-gray-800 dark:bg-gray-700 text-white text-sm rounded opacity-0 group-hover:opacity-100 transition-opacity whitespace-nowrap\">\r\n                    {user.name}\r\n                  </span>\r\n                </Link>\r\n                <button\r\n                  onClick={handleLogout}\r\n                  className=\"group relative p-2 text-df-primary dark:text-white hover:text-df-primary/80 dark:hover:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\r\n                  title={t(\"logout\")}\r\n                >\r\n                  <FaSignOutAlt className=\"text-xl\" />\r\n                  <span className=\"absolute -bottom-8 left-1/2 transform -translate-x-1/2 px-2 py-1 bg-gray-800 dark:bg-gray-700 text-white text-sm rounded opacity-0 group-hover:opacity-100 transition-opacity whitespace-nowrap\">\r\n                    {t(\"logout\")}\r\n                  </span>\r\n                </button>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { format } from \"date-fns\";\r\n\r\nfunction PendingTaskModal({ task, users, onClose, onApprove }) {\r\n  const [assignedTo, setAssignedTo] = useState(\"\");\r\n  const [dueDate, setDueDate] = useState(format(new Date(), \"yyyy-MM-dd\"));\r\n  const { t } = useTranslation();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onApprove(task._id, {\r\n      assignedTo,\r\n      dueDate: new Date(dueDate),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-[55] overflow-y-auto\">\r\n      <div className=\"fixed inset-0 bg-black/30\" onClick={onClose}></div>\r\n      <div className=\"relative min-h-screen flex items-center justify-center p-4\">\r\n        <div className=\"relative bg-white dark:bg-gray-800 rounded-lg w-full max-w-2xl\">\r\n          <div className=\"sticky top-0 z-[56] bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 p-4\">\r\n            <div className=\"flex justify-between items-center\">\r\n              <h3 className=\"text-lg font-medium text-df-primary dark:text-white\">\r\n                {t(\"reviewTask\")}\r\n              </h3>\r\n              <button\r\n                onClick={onClose}\r\n                className=\"text-gray-400 hover:text-gray-500 dark:hover:text-gray-300\"\r\n              >\r\n                <span className=\"sr-only\">{t(\"close\")}</span>\r\n                <svg\r\n                  className=\"h-6 w-6\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  stroke=\"currentColor\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M6 18L18 6M6 6l12 12\"\r\n                  />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"p-6\">\r\n            <div className=\"space-y-6\">\r\n              {/* Felanmälarinformation */}\r\n              <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\">\r\n                <h4 className=\"text-sm font-medium text-df-primary dark:text-white mb-2\">\r\n                  {t(\"reporterInfo\")}\r\n                </h4>\r\n                <dl className=\"grid grid-cols-1 gap-2\">\r\n                  <div>\r\n                    <dt className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\r\n                      {t(\"name\")}:\r\n                    </dt>\r\n                    <dd className=\"text-sm text-gray-900 dark:text-white\">\r\n                      {task.reporterName}\r\n                    </dd>\r\n                  </div>\r\n                  <div>\r\n                    <dt className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\r\n                      {t(\"email\")}:\r\n                    </dt>\r\n                    <dd className=\"text-sm text-gray-900 dark:text-white\">\r\n                      {task.reporterEmail}\r\n                    </dd>\r\n                  </div>\r\n                  <div>\r\n                    <dt className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\r\n                      {t(\"phone\")}:\r\n                    </dt>\r\n                    <dd className=\"text-sm text-gray-900 dark:text-white\">\r\n                      {task.reporterPhone}\r\n                    </dd>\r\n                  </div>\r\n                  <div>\r\n                    <dt className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\r\n                      {t(\"address\")}:\r\n                    </dt>\r\n                    <dd className=\"text-sm text-gray-900 dark:text-white\">\r\n                      {task.address} - {task.apartmentNumber}\r\n                    </dd>\r\n                  </div>\r\n                </dl>\r\n              </div>\r\n\r\n              {/* Uppgiftsinformation */}\r\n              <div>\r\n                <h4 className=\"text-sm font-medium text-df-primary dark:text-white mb-2\">\r\n                  {t(\"taskDetails\")}\r\n                </h4>\r\n                <div className=\"space-y-4\">\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                      {t(\"description\")}\r\n                    </label>\r\n                    <div className=\"mt-1 p-3 bg-gray-50 dark:bg-gray-700 rounded-md\">\r\n                      <p className=\"text-sm text-gray-900 dark:text-white whitespace-pre-wrap\">\r\n                        {task.description}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Formulär för godkännande */}\r\n              <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"assignedTo\"\r\n                    className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\"\r\n                  >\r\n                    {t(\"assignTo\")}\r\n                  </label>\r\n                  <select\r\n                    id=\"assignedTo\"\r\n                    value={assignedTo}\r\n                    onChange={(e) => setAssignedTo(e.target.value)}\r\n                    required\r\n                    className=\"mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 shadow-sm focus:border-df-primary focus:ring focus:ring-df-primary focus:ring-opacity-50 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                  >\r\n                    <option value=\"\">{t(\"selectUser\")}</option>\r\n                    {users.map((user) => (\r\n                      <option key={user._id} value={user._id}>\r\n                        {user.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"dueDate\"\r\n                    className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\"\r\n                  >\r\n                    {t(\"dueDate\")}\r\n                  </label>\r\n                  <input\r\n                    type=\"date\"\r\n                    id=\"dueDate\"\r\n                    value={dueDate}\r\n                    onChange={(e) => setDueDate(e.target.value)}\r\n                    required\r\n                    className=\"mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 shadow-sm focus:border-df-primary focus:ring focus:ring-df-primary focus:ring-opacity-50 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex justify-end space-x-3\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={onClose}\r\n                    className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200 dark:bg-gray-700 dark:text-gray-300 dark:hover:bg-gray-600\"\r\n                  >\r\n                    {t(\"cancel\")}\r\n                  </button>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"px-4 py-2 text-sm font-medium text-white bg-df-primary rounded-md hover:bg-df-primary/90\"\r\n                  >\r\n                    {t(\"approve\")}\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PendingTaskModal;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport axiosInstance from \"../utils/axios\";\r\nimport { format } from \"date-fns\";\r\nimport PendingTaskModal from \"./PendingTaskModal\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport PageHeader from \"./PageHeader\";\r\n\r\nfunction PendingTasksManagement() {\r\n  const [pendingTasks, setPendingTasks] = useState([]);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [users, setUsers] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const { t } = useTranslation();\r\n  const { user } = useAuth();\r\n\r\n  const fetchPendingTasks = useCallback(async () => {\r\n    try {\r\n      setError(\"\");\r\n      const response = await axiosInstance.get(\"/tasks/pending\");\r\n      setPendingTasks(response.data.pendingTasks || []);\r\n    } catch (error) {\r\n      console.error(\"Error fetching pending tasks:\", error.response || error);\r\n      if (error.response?.status === 403) {\r\n        setError(t(\"accessDenied\"));\r\n      } else if (error.response?.status === 400) {\r\n        setError(t(\"invalidRequest\"));\r\n      } else {\r\n        setError(t(\"errorFetchingTasks\"));\r\n      }\r\n      setPendingTasks([]);\r\n    }\r\n  }, [t]);\r\n\r\n  const fetchUsers = useCallback(async () => {\r\n    try {\r\n      const response = await axiosInstance.get(\"/users\");\r\n      setUsers(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user?.role === \"ADMIN\" || user?.role === \"SUPERADMIN\") {\r\n      fetchPendingTasks();\r\n      fetchUsers();\r\n    } else {\r\n      setError(t(\"accessDenied\"));\r\n    }\r\n  }, [user, fetchPendingTasks, fetchUsers, t]);\r\n\r\n  const handleApprove = async (taskId, data) => {\r\n    try {\r\n      setError(\"\");\r\n      await axiosInstance.post(`/tasks/pending/${taskId}/approve`, data);\r\n      fetchPendingTasks();\r\n      setSelectedTask(null);\r\n    } catch (error) {\r\n      console.error(\"Error approving task:\", error);\r\n      if (error.response?.status === 403) {\r\n        setError(t(\"accessDenied\"));\r\n      } else {\r\n        setError(t(\"errorApprovingTask\"));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-df-light dark:bg-dark pt-20 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6\">\r\n          <PageHeader title={t(\"pendingTasks\")} />\r\n\r\n          {error ? (\r\n            <div className=\"p-4 bg-red-100 dark:bg-red-900/50 border border-red-400 text-red-700 dark:text-red-200 rounded relative\">\r\n              <span className=\"block sm:inline\">{error}</span>\r\n            </div>\r\n          ) : (\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n                <thead className=\"bg-gray-50 dark:bg-gray-700\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      {t(\"title\")}\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      {t(\"reporter\")}\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      {t(\"receivedAt\")}\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      {t(\"actions\")}\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\r\n                  {pendingTasks.length === 0 ? (\r\n                    <tr>\r\n                      <td\r\n                        colSpan=\"4\"\r\n                        className=\"px-6 py-4 text-center text-gray-500 dark:text-gray-400\"\r\n                      >\r\n                        {t(\"noPendingTasks\")}\r\n                      </td>\r\n                    </tr>\r\n                  ) : (\r\n                    pendingTasks.map((task) => (\r\n                      <tr key={task._id}>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <div className=\"text-sm font-medium text-df-primary dark:text-white\">\r\n                            {task.title}\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <div className=\"text-sm text-gray-900 dark:text-gray-300\">\r\n                            {task.reporterName}\r\n                          </div>\r\n                          <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                            {task.reporterEmail}\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <div className=\"text-sm text-gray-900 dark:text-gray-300\">\r\n                            {format(\r\n                              new Date(task.createdAt),\r\n                              \"yyyy-MM-dd HH:mm\"\r\n                            )}\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <button\r\n                            onClick={() => setSelectedTask(task)}\r\n                            className=\"text-df-primary hover:text-df-primary/80 dark:text-df-accent dark:hover:text-df-accent/80\"\r\n                          >\r\n                            {t(\"review\")}\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n\r\n          {selectedTask && (\r\n            <PendingTaskModal\r\n              task={selectedTask}\r\n              users={users}\r\n              onClose={() => setSelectedTask(null)}\r\n              onApprove={handleApprove}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PendingTasksManagement;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axiosInstance from \"../utils/axios\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport UserModal from \"./UserModal\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport PageHeader from \"./PageHeader\";\r\n\r\nfunction UserManagement() {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [showInactive, setShowInactive] = useState(false);\r\n  const [isCreating, setIsCreating] = useState(false);\r\n  const { t } = useTranslation();\r\n  const { user: currentUser } = useAuth();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      const decoded = jwtDecode(token);\r\n      if (decoded.role === \"SUPERADMIN\" || decoded.role === \"ADMIN\") {\r\n        fetchUsers();\r\n      } else {\r\n        setError(t(\"accessDenied\"));\r\n      }\r\n    } else {\r\n      setError(t(\"accessDenied\"));\r\n    }\r\n  }, [t]);\r\n\r\n  const fetchUsers = useCallback(async () => {\r\n    try {\r\n      setError(\"\");\r\n      const endpoint = showInactive ? \"/users/all\" : \"/users\";\r\n      console.log(\"Fetching users from endpoint:\", endpoint);\r\n      const response = await axiosInstance.get(endpoint);\r\n      console.log(\"API response:\", response.data);\r\n\r\n      let userData = [];\r\n      if (response.data && Array.isArray(response.data)) {\r\n        userData = response.data;\r\n      } else if (response.data && Array.isArray(response.data.users)) {\r\n        userData = response.data.users;\r\n      } else if (response.data && Array.isArray(response.data.data)) {\r\n        userData = response.data.data;\r\n      }\r\n\r\n      // Modifiera visningen av användarroller baserat på inloggad användares roll\r\n      const processedUsers = userData.map((user) => ({\r\n        ...user,\r\n        displayRole:\r\n          currentUser?.role === \"SUPERADMIN\"\r\n            ? user.role\r\n            : user.role === \"SUPERADMIN\"\r\n            ? \"ADMIN\"\r\n            : user.role,\r\n      }));\r\n\r\n      console.log(\"Processed user data:\", processedUsers);\r\n      setUsers(processedUsers);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error.response || error);\r\n      if (error.response?.status === 403) {\r\n        setError(t(\"accessDenied\"));\r\n      } else {\r\n        setError(t(\"errorFetchingUsers\"));\r\n      }\r\n      setUsers([]);\r\n      setLoading(false);\r\n    }\r\n  }, [t, showInactive, currentUser]);\r\n\r\n  const handleEdit = async (userData) => {\r\n    try {\r\n      setError(\"\");\r\n      const response = await axiosInstance.put(\r\n        `/users/${selectedUser._id}`,\r\n        userData\r\n      );\r\n      if (response.data) {\r\n        setUsers(\r\n          users.map((user) =>\r\n            user._id === selectedUser._id ? response.data : user\r\n          )\r\n        );\r\n        setSelectedUser(null);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Update error:\", error);\r\n      if (error.response?.status === 400) {\r\n        alert(error.response.data.message || t(\"invalidData\"));\r\n      } else if (error.response?.status === 401) {\r\n        alert(t(\"unauthorized\"));\r\n      } else if (error.response?.status === 403) {\r\n        alert(t(\"notAuthorized\"));\r\n      } else if (error.response?.status === 409) {\r\n        alert(t(\"emailAlreadyExists\"));\r\n      } else {\r\n        alert(t(\"errorUpdatingUser\"));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleToggleStatus = async (userId) => {\r\n    try {\r\n      setError(\"\");\r\n      await axiosInstance.patch(`/users/${userId}/toggle-status`);\r\n      await fetchUsers();\r\n      setSelectedUser(null);\r\n    } catch (error) {\r\n      console.error(\"Error toggling user status:\", error);\r\n      setError(t(\"errorTogglingUserStatus\"));\r\n    }\r\n  };\r\n\r\n  const canToggleUserStatus = (targetUser) => {\r\n    // Användare (USER) kan inte ändra status på någon\r\n    if (currentUser?.role === \"USER\") return false;\r\n\r\n    // Man kan inte ändra sin egen status\r\n    if (targetUser._id === currentUser?.id) return false;\r\n\r\n    // SUPERADMIN kan ändra status på alla utom sig själv\r\n    if (currentUser?.role === \"SUPERADMIN\") return true;\r\n\r\n    // ADMIN kan ändra status på alla utom SUPERADMIN och sig själv\r\n    if (currentUser?.role === \"ADMIN\") {\r\n      return targetUser.displayRole !== \"SUPERADMIN\";\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const handleUserClick = (user) => {\r\n    // Alla kan uppdatera sin egen profil\r\n    if (user._id === currentUser?.id) {\r\n      setSelectedUser(user);\r\n      return;\r\n    }\r\n\r\n    // SUPERADMIN kan redigera alla utom sig själv\r\n    if (currentUser?.role === \"SUPERADMIN\") {\r\n      setSelectedUser(user);\r\n      return;\r\n    }\r\n\r\n    // ADMIN kan redigera alla utom SUPERADMIN\r\n    if (currentUser?.role === \"ADMIN\" && user.displayRole !== \"SUPERADMIN\") {\r\n      setSelectedUser(user);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const handleCreate = async (userData) => {\r\n    try {\r\n      setError(\"\");\r\n      await axiosInstance.post(\"/users\", userData);\r\n      await fetchUsers();\r\n      setIsCreating(false);\r\n    } catch (error) {\r\n      console.error(\"Error creating user:\", error.response || error);\r\n      alert(t(\"errorCreatingUser\"));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, [fetchUsers, showInactive]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-64\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-df-primary\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-df-light dark:bg-dark pt-20 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6\">\r\n          <PageHeader title={t(\"users\")} />\r\n\r\n          <div className=\"mb-4 flex items-center\">\r\n            <label className=\"flex items-center space-x-2 text-sm text-gray-600 dark:text-gray-300\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={showInactive}\r\n                onChange={(e) => setShowInactive(e.target.checked)}\r\n                className=\"rounded border-gray-300 text-df-primary focus:ring-df-primary dark:border-gray-600 dark:bg-gray-700\"\r\n              />\r\n              <span>{t(\"showInactive\")}</span>\r\n            </label>\r\n          </div>\r\n\r\n          {error ? (\r\n            <div className=\"p-4 bg-red-100 dark:bg-red-900/50 border border-red-400 text-red-700 dark:text-red-200 rounded relative\">\r\n              <span className=\"block sm:inline\">{error}</span>\r\n            </div>\r\n          ) : (\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n                <thead className=\"bg-gray-50 dark:bg-gray-700\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      {t(\"name\")}\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      {t(\"email\")}\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      {t(\"role\")}\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      {t(\"status\")}\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      {t(\"actions\")}\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\r\n                  {users.length === 0 ? (\r\n                    <tr>\r\n                      <td\r\n                        colSpan=\"5\"\r\n                        className=\"px-6 py-4 text-center text-gray-500 dark:text-gray-400\"\r\n                      >\r\n                        {t(\"noUsers\")}\r\n                      </td>\r\n                    </tr>\r\n                  ) : (\r\n                    users.map((user) => (\r\n                      <tr\r\n                        key={user._id}\r\n                        onClick={() => handleUserClick(user)}\r\n                        className={`${\r\n                          !user.isActive ? \"opacity-50\" : \"\"\r\n                        } hover:bg-gray-50 dark:hover:bg-gray-700 cursor-pointer`}\r\n                      >\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <div className=\"text-sm font-medium text-df-primary dark:text-white\">\r\n                            {user.name}\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <div className=\"text-sm text-gray-900 dark:text-gray-300\">\r\n                            {user.email}\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <span\r\n                            className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\r\n                              user.displayRole === \"ADMIN\"\r\n                                ? \"bg-purple-100 text-purple-800 dark:bg-purple-800 dark:text-purple-100\"\r\n                                : \"bg-blue-100 text-blue-800 dark:bg-blue-800 dark:text-blue-100\"\r\n                            }`}\r\n                          >\r\n                            {user.displayRole}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <span\r\n                            className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\r\n                              user.isActive\r\n                                ? \"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\"\r\n                                : \"bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200\"\r\n                            }`}\r\n                          >\r\n                            {user.isActive ? t(\"active\") : t(\"inactive\")}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                          {canToggleUserStatus(user) && (\r\n                            <button\r\n                              onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                handleToggleStatus(user._id);\r\n                              }}\r\n                              className=\"text-df-primary hover:text-df-primary/80 dark:text-df-accent dark:hover:text-df-accent/80\"\r\n                            >\r\n                              {user.isActive ? t(\"deactivate\") : t(\"activate\")}\r\n                            </button>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n\r\n          {(selectedUser || isCreating) && (\r\n            <UserModal\r\n              user={selectedUser}\r\n              onClose={() => {\r\n                setSelectedUser(null);\r\n                setIsCreating(false);\r\n              }}\r\n              onEdit={handleEdit}\r\n              onSubmit={handleCreate}\r\n              isCreating={isCreating}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserManagement;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Navigate,\r\n} from \"react-router-dom\";\r\nimport { useAuth } from \"./context/AuthContext\";\r\nimport Login from \"./components/Login\";\r\nimport MonthView from \"./components/MonthView\";\r\nimport Profile from \"./components/Profile\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport PendingTasksManagement from \"./components/PendingTasksManagement\";\r\nimport UserManagement from \"./components/UserManagement\";\r\n\r\nfunction AppRoutes() {\r\n  const { user } = useAuth();\r\n\r\n  if (!user) {\r\n    return (\r\n      <Routes>\r\n        <Route path=\"/dftasks/login\" element={<Login />} />\r\n        <Route path=\"*\" element={<Navigate to=\"/dftasks/login\" replace />} />\r\n      </Routes>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Routes>\r\n        <Route path=\"/dftasks/month-view\" element={<MonthView />} />\r\n        <Route path=\"/dftasks/profile\" element={<Profile />} />\r\n        <Route\r\n          path=\"/dftasks/pending-tasks\"\r\n          element={<PendingTasksManagement />}\r\n        />\r\n        <Route path=\"/dftasks/users\" element={<UserManagement />} />\r\n        <Route\r\n          path=\"/dftasks/login\"\r\n          element={<Navigate to=\"/dftasks/month-view\" replace />}\r\n        />\r\n        <Route\r\n          path=\"/dftasks\"\r\n          element={<Navigate to=\"/dftasks/month-view\" replace />}\r\n        />\r\n        <Route\r\n          path=\"/\"\r\n          element={<Navigate to=\"/dftasks/month-view\" replace />}\r\n        />\r\n        <Route\r\n          path=\"*\"\r\n          element={<Navigate to=\"/dftasks/month-view\" replace />}\r\n        />\r\n      </Routes>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <AppRoutes />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport enTranslations from \"./i18n/locales/en.json\";\r\nimport svTranslations from \"./i18n/locales/sv.json\";\r\nimport plTranslations from \"./i18n/locales/pl.json\";\r\nimport ukTranslations from \"./i18n/locales/uk.json\";\r\n\r\nconst resources = {\r\n  en: {\r\n    translation: enTranslations,\r\n  },\r\n  sv: {\r\n    translation: svTranslations,\r\n  },\r\n  pl: {\r\n    translation: plTranslations,\r\n  },\r\n  uk: {\r\n    translation: ukTranslations,\r\n  },\r\n};\r\n\r\ni18n.use(initReactI18next).init({\r\n  resources,\r\n  lng: \"sv\", // default language\r\n  fallbackLng: \"en\",\r\n  interpolation: {\r\n    escapeValue: false,\r\n  },\r\n});\r\n\r\nexport default i18n;\r\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport tasksReducer from \"./slices/tasksSlice\";\r\n\r\nconst rootReducer = combineReducers({\r\n  tasks: tasksReducer,\r\n});\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  whitelist: [\"tasks\"], // Endast tasks kommer att persisteras\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: false, // Behövs för redux-persist\r\n    }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","//index.js\r\n\r\nimport React from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { I18nextProvider } from \"react-i18next\";\r\nimport i18n from \"./i18n\";\r\nimport { AuthProvider } from \"./context/AuthContext\";\r\nimport { ThemeProvider } from \"./context/ThemeContext\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { store, persistor } from \"./store\";\r\n\r\nconst container = document.getElementById(\"root\");\r\nconst root = createRoot(container);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <I18nextProvider i18n={i18n}>\r\n          <AuthProvider>\r\n            <ThemeProvider>\r\n              <ToastContainer bodyStyle={{ fontFamily: \"Roboto\" }} />\r\n              <App />\r\n            </ThemeProvider>\r\n          </AuthProvider>\r\n        </I18nextProvider>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>\r\n);\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkfrontend\"] = self[\"webpackChunkfrontend\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [970,182,967,471,369,247,173,54], () => (__webpack_require__(798)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","AuthContext","createContext","AuthProvider","_ref","children","user","setUser","useState","isLoading","setIsLoading","setUserLanguage","userData","preferredLanguage","i18next","localStorage","setItem","document","documentElement","lang","useEffect","checkAuth","token","getItem","decoded","jwtDecode","exp","Date","now","removeItem","error","_jsx","Provider","value","login","logout","updateUser","updatedUser","_objectSpread","useAuth","useContext","axiosInstance","axios","create","baseURL","process","headers","interceptors","request","use","config","Authorization","concat","Promise","reject","response","_error$response","status","window","location","href","countryFlags","en","pl","sv","uk","LanguageSelector","i18n","t","useTranslation","className","Object","entries","map","country","onClick","changeLanguage","JSON","stringify","handleLanguageChange","language","title","ReactCountryFlag","countryCode","svg","style","width","height","email","setEmail","password","setPassword","setError","navigate","useNavigate","replace","_jsxs","src","alt","onSubmit","async","e","preventDefault","post","data","_error$response$data","message","htmlFor","id","name","type","autoComplete","required","placeholder","onChange","target","disabled","useTaskTranslation","translateTask","useMemo","task","translatedTitle","translatedDesc","description","translations","translatedComments","comments","comment","commentContent","content","createdBy","_translatedLang","translateTasks","Array","isArray","tasks","all","translateComments","_comment$translations","_comment$translations2","_translated","currentLanguage","_editedTask$assignedT","_translatedTask$assig","onClose","onStatusUpdate","onAddComment","onArchive","onToggleCommentStatus","userRole","userId","getStatusClass","renderStatus","users","onEdit","newComment","setNewComment","isSubmitting","setIsSubmitting","translatedTask","setTranslatedTask","editMode","setEditMode","editedTask","setEditedTask","isAdmin","translated","updateTranslation","dueDate","format","handleInputChange","prev","FaTimes","rows","assignedTo","_id","toast","isActive","length","_comment$createdBy","createdAt","handleAddComment","trim","then","catch","finally","onCancel","initialData","formData","setFormData","_initialData$assigned","keys","handleChange","isCreating","setName","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","setPreferredLanguage","success","setSuccess","currentUser","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","updateData","_response$data","patch","setTimeout","_error$response2","_error$response3","newLang","_error$response4","_error$response4$data","tasksAPI","getTasks","get","taskData","updateTaskStatus","taskId","addComment","fetchTasks","createAsyncThunk","_ref2","showInactive","rejectWithValue","createTask","_ref3","_ref4","_ref5","toggleTaskStatus","_ref6","_ref7","_ref8","_error$response5","tasksSlice","createSlice","initialState","items","loading","selectedTask","reducers","setSelectedTask","state","action","payload","optimisticUpdateTask","updatedTask","index","findIndex","optimisticAddComment","_state$selectedTask","find","unshift","extraReducers","builder","addCase","pending","fulfilled","rejected","push","_state$selectedTask2","_state$selectedTask3","_state$selectedTask4","actions","dispatch","useDispatch","useSelector","setUsers","setCurrentUser","showUserModal","setShowUserModal","currentMonth","showTaskForm","setShowTaskForm","selectedDate","setSelectedDate","showArchived","setShowArchived","useTaskUtils","_selectedTask$comment","updateSelectedTaskComments","canEditTask","_task$assignedTo","role","daysInMonth","getFullYear","getMonth","getDate","firstDayOfMonth","getDay","PageHeader","checked","date","monthIndex","getMonthName","day","from","_","dayTasks","filter","currentTarget","handleDayClick","_task$assignedTo2","handleTaskClick","TaskModal","newStatus","unwrap","commentText","tempComment","toString","toISOString","TaskForm","handleCancelTaskForm","UserModal","Profile","setMessage","passwordMessage","setPasswordMessage","updateProfile","passwordData","changePassword","ThemeContext","ThemeProvider","darkMode","setDarkMode","savedTheme","matchMedia","matches","classList","add","remove","toggleTheme","Navbar","pendingTasksCount","setPendingTasksCount","fetchPendingTasksCount","_response$data$pendin","pendingTasks","interval","setInterval","clearInterval","Link","to","FaTasks","FaClipboardList","FaUsers","FaSun","FaMoon","_Fragment","FaUser","handleLogout","FaSignOutAlt","onApprove","setAssignedTo","setDueDate","reporterName","reporterEmail","reporterPhone","address","apartmentNumber","setPendingTasks","fetchPendingTasks","useCallback","fetchUsers","colSpan","PendingTaskModal","setLoading","selectedUser","setSelectedUser","setShowInactive","setIsCreating","endpoint","processedUsers","displayRole","handleUserClick","targetUser","stopPropagation","handleToggleStatus","put","alert","AppRoutes","Routes","Route","path","element","MonthView","PendingTasksManagement","UserManagement","Navigate","Login","Router","resources","translation","initReactI18next","init","lng","fallbackLng","interpolation","escapeValue","rootReducer","combineReducers","tasksReducer","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","persistor","persistStore","container","getElementById","createRoot","render","React","PersistGate","I18nextProvider","ToastContainer","bodyStyle","fontFamily","App","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","j","every","splice","r","n","getter","__esModule","a","getPrototypeOf","obj","mode","this","ns","def","current","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}